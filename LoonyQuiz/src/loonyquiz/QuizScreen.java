/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loonyquiz;

import java.awt.Color;
import javax.swing.JButton;

/**
 *
 * @author Hannah
 */
public class QuizScreen extends javax.swing.JFrame
{

    /**
     * Creates new form QuizScreen
     */
    public QuizScreen()
    {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        butAOne.setText(Global.a);
        butATwo.setText(Global.b);
        butAThree.setText(Global.c);
        butAfour.setText(Global.d);
        
        LabQue.setLineWrap(true);
        LabQue.setEditable(false);
        LabQue.setText(Global.question);
        //runTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        labTimer = new javax.swing.JLabel();
        butAOne = new javax.swing.JButton();
        butATwo = new javax.swing.JButton();
        butAThree = new javax.swing.JButton();
        butAfour = new javax.swing.JButton();
        ScrollPane = new javax.swing.JScrollPane();
        LabQue = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quiz");
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(380, 500));
        setMinimumSize(new java.awt.Dimension(380, 500));

        labTimer.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        labTimer.setText("Timer");

        butAOne.setText("A1");
        butAOne.setMaximumSize(new java.awt.Dimension(125, 65));
        butAOne.setMinimumSize(new java.awt.Dimension(125, 65));
        butAOne.setPreferredSize(new java.awt.Dimension(125, 65));
        butAOne.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                butAOneActionPerformed(evt);
            }
        });

        butATwo.setText("A2");
        butATwo.setMaximumSize(new java.awt.Dimension(125, 65));
        butATwo.setMinimumSize(new java.awt.Dimension(125, 65));
        butATwo.setPreferredSize(new java.awt.Dimension(125, 65));
        butATwo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                butATwoActionPerformed(evt);
            }
        });

        butAThree.setText("A3");
        butAThree.setMaximumSize(new java.awt.Dimension(125, 65));
        butAThree.setMinimumSize(new java.awt.Dimension(125, 65));
        butAThree.setPreferredSize(new java.awt.Dimension(125, 65));
        butAThree.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                butAThreeActionPerformed(evt);
            }
        });

        butAfour.setText("A4");
        butAfour.setMaximumSize(new java.awt.Dimension(125, 65));
        butAfour.setMinimumSize(new java.awt.Dimension(125, 65));
        butAfour.setPreferredSize(new java.awt.Dimension(125, 65));
        butAfour.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                butAfourActionPerformed(evt);
            }
        });

        LabQue.setColumns(20);
        LabQue.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        LabQue.setRows(5);
        ScrollPane.setViewportView(LabQue);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(labTimer))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(butAOne, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(butAThree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(butATwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(butAfour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(labTimer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butAOne, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butATwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butAThree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butAfour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(117, 117, 117))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butAOneActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_butAOneActionPerformed
    {//GEN-HEADEREND:event_butAOneActionPerformed
        // Load NexTopScreen with topix chosen
        questionAnswered(1);
        if (Global.lives > 0)
        {
           NexTopScreen tps = new NexTopScreen();
            tps.setVisible(true);
            this.dispose(); 
        }
    }//GEN-LAST:event_butAOneActionPerformed

    private void butATwoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_butATwoActionPerformed
    {//GEN-HEADEREND:event_butATwoActionPerformed
        // Load NexTopScreen with topix chosen
        questionAnswered(2);
        if (Global.lives > 0)
        {
            NexTopScreen tps = new NexTopScreen();
            tps.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_butATwoActionPerformed

    private void butAThreeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_butAThreeActionPerformed
    {//GEN-HEADEREND:event_butAThreeActionPerformed
        // Load NexTopScreen with topix chosen
        questionAnswered(3);
        if (Global.lives > 0)
        {
            NexTopScreen tps = new NexTopScreen();
            tps.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_butAThreeActionPerformed

    private void butAfourActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_butAfourActionPerformed
    {//GEN-HEADEREND:event_butAfourActionPerformed
        // Load NexTopScreen with topix chosen
        questionAnswered(4);
        if (Global.lives > 0)
        {
            NexTopScreen tps = new NexTopScreen();
            tps.setVisible(true);
            this.dispose();
        }
        
    }//GEN-LAST:event_butAfourActionPerformed

    public void questionAnswered(int player)
    {
        if(player == Global.answer)
        {
            Global.correct = "Correct!";
        }
        else
        {
            Global.correct = "Incorrect!";
            Global.lives--;
            endGame();
        }
    }
    
    public void endGame()
    {
        if(Global.lives == 0)
        {
            MainScreen ms = new MainScreen();
            ms.setVisible(true);
            this.dispose();// Load start screen
        }
    }
    
    public void runTime()
    {        
        Time.startTimer();
        int eTimer = 10;
        long timer = Time.getTimeInMills();
        long measureTime1, measureTime2;

        long time = (eTimer * 1000); //There are 1000 milliseconds to a second 
        measureTime1 = timer;  // For measuring a second
        measureTime2 = timer;  // For measuring the ten seconds
        
        while(eTimer != 0)
        {
            labTimer.setText(String.valueOf(eTimer));
            timer = Time.getTimeInMills();
            if(timer >= (measureTime2 + 1000))  // Checks how long a second has passed
            {
                eTimer--;
                // Edit GUI Timer 
                measureTime2 = timer;
            }
            if(timer >= (measureTime1 + time)) // Checks if eTimer (10 seconds) has passed
            {
                //Timer is done, return 5 (Because user ran out of time)
				
				// questionAnswered(5);   This is a method which checks if the answer was right
              
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(QuizScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(QuizScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(QuizScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(QuizScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new QuizScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea LabQue;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton butAOne;
    private javax.swing.JButton butAThree;
    private javax.swing.JButton butATwo;
    private javax.swing.JButton butAfour;
    private javax.swing.JLabel labTimer;
    // End of variables declaration//GEN-END:variables
}
